/***************************************************************************//**
 * @file
 * @brief OTS Object Server instance autogenerated header file
 *******************************************************************************
 * # License
 * <b>Copyright 2022 Silicon Laboratories Inc. www.silabs.com</b>
 *******************************************************************************
 *
 * SPDX-License-Identifier: Zlib
 *
 * The licensor of this software is Silicon Laboratories Inc.
 *
 * This software is provided 'as-is', without any express or implied
 * warranty. In no event will the authors be held liable for any damages
 * arising from the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 *
 ******************************************************************************/
 
#ifndef SL_BT_OTS_SERVER_INSTANCES
#define SL_BT_OTS_SERVER_INSTANCES

#include "sl_bluetooth.h"
#include "sl_bt_ots_datatypes.h"
#include "sl_bt_ots_server.h"

{% for inst in ots_server_instance -%}
#include "sl_bt_ots_server_{{ inst }}_config.h"
{% endfor %}

#if {% for inst in ots_server_instance %}SL_BT_OTS_SERVER_{{ inst | upper }}_CONFIG_TIME_SUPPORT{% if not loop.last %} || {% endif %} {% endfor %}
#define SL_BT_OTS_SERVER_CONFIG_GLOBAL_TIME_SUPPORT                       1
#else
#define SL_BT_OTS_SERVER_CONFIG_GLOBAL_TIME_SUPPORT                       0
#endif

#if {% for inst in ots_server_instance  %}SL_BT_OTS_SERVER_{{ inst | upper }}_CONFIG_TIME_FIRST_CREATED_SUPPORT{% if not loop.last %} || {% endif %}{% endfor %}
#define SL_BT_OTS_SERVER_CONFIG_GLOBAL_TIME_FIRST_CREATED_SUPPORT         1
#else
#define SL_BT_OTS_SERVER_CONFIG_GLOBAL_TIME_FIRST_CREATED_SUPPORT         0
#endif

#if {% for inst in ots_server_instance  %}SL_BT_OTS_SERVER_{{ inst | upper }}_CONFIG_TIME_LAST_MODIFIED_SUPPORT{% if not loop.last %} || {% endif %}{% endfor %}
#define SL_BT_OTS_SERVER_CONFIG_GLOBAL_TIME_LAST_MODIFIED_SUPPORT         1
#else
#define SL_BT_OTS_SERVER_CONFIG_GLOBAL_TIME_LAST_MODIFIED_SUPPORT         0
#endif

#if {% for inst in ots_server_instance  %}SL_BT_OTS_SERVER_{{ inst | upper }}_CONFIG_OBJECT_CHANGED_SUPPORT{% if not loop.last %} || {% endif %}{% endfor %}
#define SL_BT_OTS_SERVER_CONFIG_GLOBAL_OBJECT_CHANGED_SUPPORT             1
#else
#define SL_BT_OTS_SERVER_CONFIG_GLOBAL_OBJECT_CHANGED_SUPPORT             0
#endif

#if {% for inst in ots_server_instance  %}SL_BT_OTS_SERVER_{{ inst | upper }}_CONFIG_OBJECT_LIST_FILTER_SUPPORT{% if not loop.last %} || {% endif %}{% endfor %}
#define SL_BT_OTS_SERVER_CONFIG_GLOBAL_OBJECT_LIST_FILTER_SUPPORT         1
#else
#define SL_BT_OTS_SERVER_CONFIG_GLOBAL_OBJECT_LIST_FILTER_SUPPORT         0
#endif

#if {% for inst in ots_server_instance  %}SL_BT_OTS_SERVER_{{ inst | upper }}_CONFIG_MULTIPLE_OBJECTS{% if not loop.last %} || {% endif %}{% endfor %}
#define SL_BT_OTS_SERVER_CONFIG_GLOBAL_MULTIPLE_OBJECTS                   1
#else
#define SL_BT_OTS_SERVER_CONFIG_GLOBAL_MULTIPLE_OBJECTS                   0
#endif

#if {% for inst in ots_server_instance  %}SL_BT_OTS_SERVER_{{ inst | upper }}_CONFIG_DLO_SUPPORT{% if not loop.last %} || {% endif %}{% endfor %}
#define SL_BT_OTS_SERVER_CONFIG_GLOBAL_DLO_SUPPORT                        1
#else
#define SL_BT_OTS_SERVER_CONFIG_GLOBAL_DLO_SUPPORT                        0
#endif

{%- for inst in ots_server_instance | sort %}
#if !defined(SL_BT_OTS_SERVER_CONFIG_INDICATION_SIZE_MAX) || (SL_BT_OTS_SERVER_CONFIG_INDICATION_SIZE_MAX < SL_BT_OTS_SERVER_{{ inst | upper }}_CONFIG_INDICATION_SIZE_MAX)
#define SL_BT_OTS_SERVER_CONFIG_INDICATION_SIZE_MAX SL_BT_OTS_SERVER_{{ inst | upper }}_CONFIG_INDICATION_SIZE_MAX
#endif
{%- endfor %}

#ifdef __cplusplus
extern "C" {
#endif

{% for inst in ots_server_instance -%}
// Data storage for instance {{ inst | lower }}
extern sl_bt_ots_server_t         sl_bt_ots_server_instance_{{ inst | lower }};
// GATT database handle for instance {{ inst | lower }}
extern sl_bt_ots_gattdb_handles_t sl_bt_ots_server_gatt_{{ inst | lower }};
{% endfor %}

// Table of OTS Object Server instances
extern const sl_bt_ots_server_t *sl_bt_ots_server_instances[];

// Object Server instance number
#define SL_BT_OTS_SERVER_COUNT {{ ots_server_instance | length }}

// Select an OTS Object Server instance
#define SL_BT_OTS_SERVER_INSTANCE(n) (sl_bt_ots_server_instances[n])

// Initializer for OTS instances
void sli_bt_ots_server_instances_init(void);

#ifdef __cplusplus
};
#endif

#endif // SL_BT_OTS_SERVER_INSTANCES
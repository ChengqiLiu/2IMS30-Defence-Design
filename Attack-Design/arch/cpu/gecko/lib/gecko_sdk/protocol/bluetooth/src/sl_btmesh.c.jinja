{{ autogenerated_c_header }}

#include <sl_common.h>
#include "sl_btmesh.h"
{%- for entry in btmesh_stack_init %}
{%-   if entry["include"] is string %}
#include "{{ entry["include"] }}"
{%-   else %}
{%-     for f in entry["include"] %}
#include "{{ f }}"
{%-     endfor %}
{%-   endif %}
{%- endfor %}
{%- for entry in btmesh_on_event %}
{%-   if entry["include"] is string %}
#include "{{ entry["include"] }}"
{%-   else %}
{%-     for f in entry["include"] %}
#include "{{ f }}"
{%-     endfor %}
{%-   endif %}
{%- endfor %}

{%- if bluetooth_api_ncp_host is not defined %}

/** @brief Table of used BGAPI classes */
static const struct sli_bgapi_class * const btmesh_class_table[] =
{
{%- for entry in btmesh_bgapi_class %}
  SL_BTMESH_BGAPI_CLASS({{entry["class"]}}),
{%- endfor %}
  NULL
};
{%- endif %}

void sl_btmesh_init(void)
{
{%- if bluetooth_api_ncp_host is not defined %}
  sl_btmesh_init_classes(btmesh_class_table);
{%- endif %}
  {%- for entry in btmesh_stack_init %}
  {{ entry["function"] }}();
  {%- endfor %}
}

SL_WEAK void sl_btmesh_on_event(sl_btmesh_msg_t* evt)
{
  (void)(evt);
}

void sl_btmesh_process_event(sl_btmesh_msg_t *evt)
{
{%- for entry in btmesh_on_event %}
  {{ entry["function"] }}(evt);
{%- endfor %}
  sl_btmesh_on_event(evt);
}

SL_WEAK bool sl_btmesh_can_process_event(uint32_t len)
{
  (void)(len);
  return true;
}

void sl_btmesh_step(void)
{
  sl_btmesh_msg_t evt;
{% if bluetooth_api_ncp_host is not defined %}
  uint32_t event_len = sl_btmesh_event_pending_len();
  // For preventing from data loss, the event will be kept in the stack's queue
  // if application cannot process it at the moment.
  if ((event_len == 0) || (!sl_btmesh_can_process_event(event_len))) {
    return;
  }
{% endif %}
  // Pop (non-blocking) a Bluetooth stack event from event queue.
  sl_status_t status = sl_btmesh_pop_event(&evt);
  if(status != SL_STATUS_OK){
    return;
  }
  sl_btmesh_process_event(&evt);
}

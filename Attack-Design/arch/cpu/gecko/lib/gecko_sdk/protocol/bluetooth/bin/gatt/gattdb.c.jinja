/********************************************************************
 * Autogenerated file, do not edit.
 *******************************************************************/

#include <stdint.h>
#include "sli_bt_gattdb_def.h"

#define GATT_HEADER(F) F
#define GATT_DATA(F) F
GATT_DATA(const uint16_t {{db.name}}_uuidtable_16_map[]) =
{
{%-     for u in db.uuid16s %}
  0x{{'%04x'%u.u16()}},
{%-     endfor %}
};

GATT_DATA(const uint8_t {{db.name}}_uuidtable_128_map[]) =
{
{%- if db.uuid128s|length %}
{%-     for u in db.uuid128s %}
  {{u.bytes|carray2}}
{%-     endfor %}
{%- else %}
  0x0 //IAR workaround for empty array
{%- endif %}
};

{%-     for a in db.attribute_rows | reverse %}
{%-   if a.value.type == GattConst.ConstValue %}
GATT_DATA(const sli_bt_gattdb_value_t {{db.name}}_attribute_field_{{loop.revindex0}}) = {
  .len = {{ a.value.bytes|length }},
  .data = {{a.value.bytes|carray}}
};
{%-   elif a.value.type == GattConst.DynamicValue %}
GATT_DATA(sli_bt_gattdb_attribute_chrvalue_t {{db.name}}_attribute_field_{{loop.revindex0}}) = {
  .properties = 0x{{'%02x'%a.properties}},
  .max_len = {{ a.value.maxlen }},
  .data = {{a.value.bytes|carray}},
};
{%-   elif a.value.type == GattConst.VariableLengthValue %}
GATT_DATA(sli_bt_gattdb_attribute_chrvalue_t {{db.name}}_attribute_field_{{loop.revindex0}}) = {
  .properties = 0x{{'%02x'%a.properties}},
  .max_len = {{ a.value.maxlen }},
  .len = {{a.value.datalen}},
  .data = {{a.value.bytes|carray}}
};
{%-    endif %}
{%-     endfor %}

GATT_DATA(const sli_bt_gattdb_attribute_t {{db.name}}_attributes_map[]) = {
{%-     for a in db.attribute_rows %}
{%-   if a.value.type == GattConst.ConstValue %}
  { .handle = 0x{{'%02x'%a.handle}}, .uuid = 0x{{'%04x'%db.uuid_handle(a.uuid)}}, .permissions = 0x{{'%02x'%a.permissions}}, .caps = 0x{{'%02x'%a.capabilities_mask()}}, .state = 0x{{'%02x'%a.state}}, .datatype = 0x{{'%02x'%a.value.type}}, .constdata = &{{db.name}}_attribute_field_{{loop.index0}} },
{%-   elif a.value.type == GattConst.ClientConfigValue %}
  { .handle = 0x{{'%02x'%a.handle}}, .uuid = 0x{{'%04x'%db.uuid_handle(a.uuid)}}, .permissions = 0x{{'%02x'%a.permissions}}, .caps = 0x{{'%02x'%a.capabilities_mask()}}, .state = 0x{{'%02x'%a.state}}, .datatype = 0x{{'%02x'%a.value.type}}, .configdata = { .flags = 0x{{'%02x'%a.value.bytes[0]}}, .clientconfig_index = 0x{{'%02x'%a.value.bytes[1]}} } },
{%-   elif a.value.type == GattConst.DynamicValue or a.value.type == GattConst.VariableLengthValue %}
  { .handle = 0x{{'%02x'%a.handle}}, .uuid = 0x{{'%04x'%db.uuid_handle(a.uuid)}}, .permissions = 0x{{'%02x'%a.permissions}}, .caps = 0x{{'%02x'%a.capabilities_mask()}}, .state = 0x{{'%02x'%a.state}}, .datatype = 0x{{'%02x'%a.value.type}}, .dynamicdata = &{{db.name}}_attribute_field_{{loop.index0}} },
{%-   elif a.value.type == GattConst.Characteristic %}
  { .handle = 0x{{'%02x'%a.handle}}, .uuid = 0x{{'%04x'%db.uuid_handle(GattConst.UUID_CHR)}}, .permissions = 0x{{'%02x'%a.permissions}}, .caps = 0x{{'%02x'%a.capabilities_mask()}}, .state = 0x{{'%02x'%a.state}}, .datatype = 0x{{'%02x'%a.value.type}}, .characteristic = { .properties = 0x{{'%02x'%a.properties}}, .char_uuid = 0x{{'%04x'%db.uuid_handle(a.uuid)}} } },
{%-   elif a.value.type == GattConst.ServiceInclude %}
  { .handle = 0x{{'%02x'%a.handle}}, .uuid = 0x{{'%04x'%db.uuid_handle(a.uuid)}}, .permissions = 0x{{'%02x'%a.permissions}}, .caps = 0x{{'%02x'%a.capabilities_mask()}}, .state = 0x{{'%02x'%a.state}}, .datatype = 0x{{'%02x'%a.value.type}}, .service_include = { .start = 0x{{'%02x'%a.include.start}}, .end = 0x{{'%02x'%a.include.end}} } },
{%-   elif a.value.type == GattConst.UserValue %}
  { .handle = 0x{{'%02x'%a.handle}}, .uuid = 0x{{'%04x'%db.uuid_handle(a.uuid)}}, .permissions = 0x{{'%02x'%a.permissions}}, .caps = 0x{{'%02x'%a.capabilities_mask()}}, .state = 0x{{'%02x'%a.state}}, .datatype = 0x{{'%02x'%a.value.type}}, .dynamicdata = NULL },
{%-     endif %}
{%-     endfor %}
};

GATT_HEADER(const sli_bt_gattdb_t {{db.name}}) = {
  .attributes = {{db.name}}_attributes_map,
  .attribute_table_size = {{db.attribute_rows|length}},
  .attribute_num = {{db.attribute_rows|length}},
  .uuid16 = {{db.name}}_uuidtable_16_map,
  .uuid16_table_size = {{db.uuid16s|length}},
  .uuid16_num = {{db.uuid16s|length}},
  .uuid128 = {{db.name}}_uuidtable_128_map,
  .uuid128_table_size = {{db.uuid128s|length}},
  .uuid128_num = {{db.uuid128s|length}},
  .num_ccfg = {{db.num_ccfg}},
  .caps_mask = 0x{{'%02x'%db.capabilities_mask()}},
  .enabled_caps = 0x{{'%02x'%db.capabilities_enabled()}},
};
{%- if db.is_default %}
const sli_bt_gattdb_t *static_gattdb = &{{db.name}};
{%- endif %}


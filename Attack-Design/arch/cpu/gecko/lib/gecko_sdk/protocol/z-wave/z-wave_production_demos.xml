<?xml version="1.0" encoding="UTF-8"?>
<demos xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:model="http://www.silabs.com/ss/Studio.ecore" xsi:noNamespaceSchemaLocation="http://www.silabs.com/ss/Demo.ecore">
  <demo name="brd2603a.demo.zwave_ncp_serial_api_controller.eu" label="Z-Wave - NCP Serial API Controller (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd2603a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd2603a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for EU Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4201a.demo.zwave_ncp_serial_api_controller.eu" label="Z-Wave - NCP Serial API Controller (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg14p231f256gm32.*"/>
    <model:property key="core.boardCompatibility" value="brd4201a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4201a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for EU Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_ncp_serial_api_controller.eu" label="Z-Wave - NCP Serial API Controller (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4202a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for EU Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4204c.demo.zwave_ncp_serial_api_controller.eu" label="Z-Wave - NCP Serial API Controller (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204c"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4204c-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for EU Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4204d.demo.zwave_ncp_serial_api_controller.eu" label="Z-Wave - NCP Serial API Controller (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204d"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4204d-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for EU Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_ncp_serial_api_controller.eu" label="Z-Wave - NCP Serial API Controller (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4205a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for EU Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_ncp_serial_api_controller.eu" label="Z-Wave - NCP Serial API Controller (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4205b-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for EU Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4206a.demo.zwave_ncp_serial_api_controller.eu" label="Z-Wave - NCP Serial API Controller (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg14p231f256gm32.*"/>
    <model:property key="core.boardCompatibility" value="brd4206a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4206a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for EU Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_ncp_serial_api_controller.eu" label="Z-Wave - NCP Serial API Controller (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4207a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for EU Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4208a.demo.zwave_ncp_serial_api_controller.eu" label="Z-Wave - NCP Serial API Controller (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg14p731f256gm32.*"/>
    <model:property key="core.boardCompatibility" value="brd4208a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4208a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for EU Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd2603a.demo.zwave_ncp_serial_api_controller.us" label="Z-Wave - NCP Serial API Controller (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd2603a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd2603a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for US Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4201a.demo.zwave_ncp_serial_api_controller.us" label="Z-Wave - NCP Serial API Controller (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (US Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg14p231f256gm32.*"/>
    <model:property key="core.boardCompatibility" value="brd4201a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4201a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for US Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_ncp_serial_api_controller.us" label="Z-Wave - NCP Serial API Controller (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4202a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for US Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4204c.demo.zwave_ncp_serial_api_controller.us" label="Z-Wave - NCP Serial API Controller (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (US Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204c"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4204c-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for US Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4204d.demo.zwave_ncp_serial_api_controller.us" label="Z-Wave - NCP Serial API Controller (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (US Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204d"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4204d-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for US Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_ncp_serial_api_controller.us" label="Z-Wave - NCP Serial API Controller (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4205a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for US Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_ncp_serial_api_controller.us" label="Z-Wave - NCP Serial API Controller (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4205b-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for US Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4206a.demo.zwave_ncp_serial_api_controller.us" label="Z-Wave - NCP Serial API Controller (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (US Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg14p231f256gm32.*"/>
    <model:property key="core.boardCompatibility" value="brd4206a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4206a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for US Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_ncp_serial_api_controller.us" label="Z-Wave - NCP Serial API Controller (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4207a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for US Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4208a.demo.zwave_ncp_serial_api_controller.us" label="Z-Wave - NCP Serial API Controller (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (US Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg14p731f256gm32.*"/>
    <model:property key="core.boardCompatibility" value="brd4208a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4208a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for US Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd2603a.demo.zwave_ncp_serial_api_controller.us_lr" label="Z-Wave - NCP Serial API Controller (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd2603a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd2603a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for US_LR Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4201a.demo.zwave_ncp_serial_api_controller.us_lr" label="Z-Wave - NCP Serial API Controller (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg14p231f256gm32.*"/>
    <model:property key="core.boardCompatibility" value="brd4201a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4201a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for US_LR Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_ncp_serial_api_controller.us_lr" label="Z-Wave - NCP Serial API Controller (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4202a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for US_LR Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4204c.demo.zwave_ncp_serial_api_controller.us_lr" label="Z-Wave - NCP Serial API Controller (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204c"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4204c-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for US_LR Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4204d.demo.zwave_ncp_serial_api_controller.us_lr" label="Z-Wave - NCP Serial API Controller (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204d"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4204d-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for US_LR Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_ncp_serial_api_controller.us_lr" label="Z-Wave - NCP Serial API Controller (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4205a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for US_LR Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_ncp_serial_api_controller.us_lr" label="Z-Wave - NCP Serial API Controller (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4205b-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for US_LR Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4206a.demo.zwave_ncp_serial_api_controller.us_lr" label="Z-Wave - NCP Serial API Controller (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg14p231f256gm32.*"/>
    <model:property key="core.boardCompatibility" value="brd4206a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4206a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for US_LR Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_ncp_serial_api_controller.us_lr" label="Z-Wave - NCP Serial API Controller (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4207a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for US_LR Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4208a.demo.zwave_ncp_serial_api_controller.us_lr" label="Z-Wave - NCP Serial API Controller (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg14p731f256gm32.*"/>
    <model:property key="core.boardCompatibility" value="brd4208a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4208a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for US_LR Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4210a.demo.zwave_ncp_serial_api_controller.us_lr" label="Z-Wave - NCP Serial API Controller (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4210a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4210a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API Controller binary for US_LR Region. The Z-Wave SerialAPI Controller application.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_ncp_serial_api_end_device.eu" label="Z-Wave - NCP Serial API End Device (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4202a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API End Device binary for EU Region. The Z-Wave SerialAPI End Device application.</model:description>
  </demo>
  <demo name="brd4204c.demo.zwave_ncp_serial_api_end_device.eu" label="Z-Wave - NCP Serial API End Device (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204c"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4204c-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API End Device binary for EU Region. The Z-Wave SerialAPI End Device application.</model:description>
  </demo>
  <demo name="brd4204d.demo.zwave_ncp_serial_api_end_device.eu" label="Z-Wave - NCP Serial API End Device (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204d"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4204d-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API End Device binary for EU Region. The Z-Wave SerialAPI End Device application.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_ncp_serial_api_end_device.eu" label="Z-Wave - NCP Serial API End Device (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4205a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API End Device binary for EU Region. The Z-Wave SerialAPI End Device application.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_ncp_serial_api_end_device.eu" label="Z-Wave - NCP Serial API End Device (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4205b-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API End Device binary for EU Region. The Z-Wave SerialAPI End Device application.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_ncp_serial_api_end_device.eu" label="Z-Wave - NCP Serial API End Device (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4207a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API End Device binary for EU Region. The Z-Wave SerialAPI End Device application.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_ncp_serial_api_end_device.us" label="Z-Wave - NCP Serial API End Device (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4202a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API End Device binary for US Region. The Z-Wave SerialAPI End Device application.</model:description>
  </demo>
  <demo name="brd4204c.demo.zwave_ncp_serial_api_end_device.us" label="Z-Wave - NCP Serial API End Device (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (US Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204c"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4204c-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API End Device binary for US Region. The Z-Wave SerialAPI End Device application.</model:description>
  </demo>
  <demo name="brd4204d.demo.zwave_ncp_serial_api_end_device.us" label="Z-Wave - NCP Serial API End Device (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (US Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204d"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4204d-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API End Device binary for US Region. The Z-Wave SerialAPI End Device application.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_ncp_serial_api_end_device.us" label="Z-Wave - NCP Serial API End Device (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4205a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API End Device binary for US Region. The Z-Wave SerialAPI End Device application.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_ncp_serial_api_end_device.us" label="Z-Wave - NCP Serial API End Device (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4205b-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API End Device binary for US Region. The Z-Wave SerialAPI End Device application.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_ncp_serial_api_end_device.us" label="Z-Wave - NCP Serial API End Device (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4207a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API End Device binary for US Region. The Z-Wave SerialAPI End Device application.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_ncp_serial_api_end_device.us_lr" label="Z-Wave - NCP Serial API End Device (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4202a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API End Device binary for US_LR Region. The Z-Wave SerialAPI End Device application.</model:description>
  </demo>
  <demo name="brd4204c.demo.zwave_ncp_serial_api_end_device.us_lr" label="Z-Wave - NCP Serial API End Device (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204c"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4204c-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API End Device binary for US_LR Region. The Z-Wave SerialAPI End Device application.</model:description>
  </demo>
  <demo name="brd4204d.demo.zwave_ncp_serial_api_end_device.us_lr" label="Z-Wave - NCP Serial API End Device (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204d"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4204d-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API End Device binary for US_LR Region. The Z-Wave SerialAPI End Device application.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_ncp_serial_api_end_device.us_lr" label="Z-Wave - NCP Serial API End Device (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4205a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API End Device binary for US_LR Region. The Z-Wave SerialAPI End Device application.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_ncp_serial_api_end_device.us_lr" label="Z-Wave - NCP Serial API End Device (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4205b-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API End Device binary for US_LR Region. The Z-Wave SerialAPI End Device application.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_ncp_serial_api_end_device.us_lr" label="Z-Wave - NCP Serial API End Device (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4207a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API End Device binary for US_LR Region. The Z-Wave SerialAPI End Device application.</model:description>
  </demo>
  <demo name="brd4209a.demo.zwave_ncp_serial_api_end_device.us_lr" label="Z-Wave - NCP Serial API End Device (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg13p531f512gm48.*"/>
    <model:property key="core.boardCompatibility" value="brd4209a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4209a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API End Device binary for US_LR Region. The Z-Wave SerialAPI End Device application.</model:description>
  </demo>
  <demo name="brd4210a.demo.zwave_ncp_serial_api_end_device.us_lr" label="Z-Wave - NCP Serial API End Device (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4210a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4210a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - NCP Serial API End Device binary for US_LR Region. The Z-Wave SerialAPI End Device application.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_door_lock_keypad.eu" label="Z-Wave - SoC Door Lock Keypad (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4202a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Door Lock Keypad binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.</model:description>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_door_lock_keypad.eu" label="Z-Wave - SoC Door Lock Keypad (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204c"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4204c-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Door Lock Keypad binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.</model:description>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_door_lock_keypad.eu" label="Z-Wave - SoC Door Lock Keypad (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204d"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4204d-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Door Lock Keypad binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_door_lock_keypad.eu" label="Z-Wave - SoC Door Lock Keypad (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4205a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Door Lock Keypad binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_door_lock_keypad.eu" label="Z-Wave - SoC Door Lock Keypad (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4205b-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Door Lock Keypad binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_door_lock_keypad.eu" label="Z-Wave - SoC Door Lock Keypad (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4207a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Door Lock Keypad binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_door_lock_keypad.us" label="Z-Wave - SoC Door Lock Keypad (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4202a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Door Lock Keypad binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.</model:description>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_door_lock_keypad.us" label="Z-Wave - SoC Door Lock Keypad (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (US Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204c"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4204c-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Door Lock Keypad binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.</model:description>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_door_lock_keypad.us" label="Z-Wave - SoC Door Lock Keypad (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (US Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204d"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4204d-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Door Lock Keypad binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_door_lock_keypad.us" label="Z-Wave - SoC Door Lock Keypad (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4205a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Door Lock Keypad binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_door_lock_keypad.us" label="Z-Wave - SoC Door Lock Keypad (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4205b-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Door Lock Keypad binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_door_lock_keypad.us" label="Z-Wave - SoC Door Lock Keypad (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4207a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Door Lock Keypad binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_door_lock_keypad.us_lr" label="Z-Wave - SoC Door Lock Keypad (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4202a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Door Lock Keypad binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.</model:description>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_door_lock_keypad.us_lr" label="Z-Wave - SoC Door Lock Keypad (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204c"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4204c-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Door Lock Keypad binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.</model:description>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_door_lock_keypad.us_lr" label="Z-Wave - SoC Door Lock Keypad (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204d"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4204d-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Door Lock Keypad binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_door_lock_keypad.us_lr" label="Z-Wave - SoC Door Lock Keypad (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4205a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Door Lock Keypad binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_door_lock_keypad.us_lr" label="Z-Wave - SoC Door Lock Keypad (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4205b-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Door Lock Keypad binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_door_lock_keypad.us_lr" label="Z-Wave - SoC Door Lock Keypad (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4207a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Door Lock Keypad binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.</model:description>
  </demo>
  <demo name="brd4209a.demo.zwave_soc_door_lock_keypad.us_lr" label="Z-Wave - SoC Door Lock Keypad (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg13p531f512gm48.*"/>
    <model:property key="core.boardCompatibility" value="brd4209a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4209a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Door Lock Keypad binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.</model:description>
  </demo>
  <demo name="brd4210a.demo.zwave_soc_door_lock_keypad.us_lr" label="Z-Wave - SoC Door Lock Keypad (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4210a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4210a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Door Lock Keypad binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_key_fob.eu" label="Z-Wave - SoC Key Fob Application (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Key Fob Application (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_key_fob/zwave_soc_key_fob-brd4202a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Key Fob binary for EU Region. The Key Fob application capable of including/excluding and controlling the included end devices through the BASIC Command Class When ever a functionality is done the Key Fob will go into EM4 power mode and can only wakeup from EM4 either through a reset or a button press on either BTN1 or BTN2</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_key_fob.eu" label="Z-Wave - SoC Key Fob Application (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Key Fob Application (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_key_fob/zwave_soc_key_fob-brd4205a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Key Fob binary for EU Region. The Key Fob application capable of including/excluding and controlling the included end devices through the BASIC Command Class When ever a functionality is done the Key Fob will go into EM4 power mode and can only wakeup from EM4 either through a reset or a button press on either BTN1 or BTN2</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_key_fob.eu" label="Z-Wave - SoC Key Fob Application (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Key Fob Application (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_key_fob/zwave_soc_key_fob-brd4205b-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Key Fob binary for EU Region. The Key Fob application capable of including/excluding and controlling the included end devices through the BASIC Command Class When ever a functionality is done the Key Fob will go into EM4 power mode and can only wakeup from EM4 either through a reset or a button press on either BTN1 or BTN2</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_key_fob.eu" label="Z-Wave - SoC Key Fob Application (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Key Fob Application (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_key_fob/zwave_soc_key_fob-brd4207a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Key Fob binary for EU Region. The Key Fob application capable of including/excluding and controlling the included end devices through the BASIC Command Class When ever a functionality is done the Key Fob will go into EM4 power mode and can only wakeup from EM4 either through a reset or a button press on either BTN1 or BTN2</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_key_fob.us" label="Z-Wave - SoC Key Fob Application (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Key Fob Application (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_key_fob/zwave_soc_key_fob-brd4202a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Key Fob binary for US Region. The Key Fob application capable of including/excluding and controlling the included end devices through the BASIC Command Class When ever a functionality is done the Key Fob will go into EM4 power mode and can only wakeup from EM4 either through a reset or a button press on either BTN1 or BTN2</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_key_fob.us" label="Z-Wave - SoC Key Fob Application (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Key Fob Application (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_key_fob/zwave_soc_key_fob-brd4205a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Key Fob binary for US Region. The Key Fob application capable of including/excluding and controlling the included end devices through the BASIC Command Class When ever a functionality is done the Key Fob will go into EM4 power mode and can only wakeup from EM4 either through a reset or a button press on either BTN1 or BTN2</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_key_fob.us" label="Z-Wave - SoC Key Fob Application (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Key Fob Application (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_key_fob/zwave_soc_key_fob-brd4205b-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Key Fob binary for US Region. The Key Fob application capable of including/excluding and controlling the included end devices through the BASIC Command Class When ever a functionality is done the Key Fob will go into EM4 power mode and can only wakeup from EM4 either through a reset or a button press on either BTN1 or BTN2</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_key_fob.us" label="Z-Wave - SoC Key Fob Application (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Key Fob Application (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_key_fob/zwave_soc_key_fob-brd4207a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Key Fob binary for US Region. The Key Fob application capable of including/excluding and controlling the included end devices through the BASIC Command Class When ever a functionality is done the Key Fob will go into EM4 power mode and can only wakeup from EM4 either through a reset or a button press on either BTN1 or BTN2</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_key_fob.us_lr" label="Z-Wave - SoC Key Fob Application (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Key Fob Application (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_key_fob/zwave_soc_key_fob-brd4202a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Portable Controller binary for US_LR Region. The Key Fob application capable of including/excluding and controlling the included end devices through the BASIC Command Class When ever a functionality is done the Key Fob will go into EM4 power mode and can only wakeup from EM4 either through a reset or a button press on either BTN1 or BTN2</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_key_fob.us_lr" label="Z-Wave - SoC Key Fob Application (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Key Fob Application (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_key_fob/zwave_soc_key_fob-brd4205a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Portable Controller binary for US_LR Region. The Key Fob application capable of including/excluding and controlling the included end devices through the BASIC Command Class When ever a functionality is done the Key Fob will go into EM4 power mode and can only wakeup from EM4 either through a reset or a button press on either BTN1 or BTN2</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_key_fob.us_lr" label="Z-Wave - SoC Key Fob Application (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Key Fob Application (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_key_fob/zwave_soc_key_fob-brd4205b-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Portable Controller binary for US_LR Region. The Key Fob application capable of including/excluding and controlling the included end devices through the BASIC Command Class When ever a functionality is done the Key Fob will go into EM4 power mode and can only wakeup from EM4 either through a reset or a button press on either BTN1 or BTN2</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_key_fob.us_lr" label="Z-Wave - SoC Key Fob Application (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Key Fob Application (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_key_fob/zwave_soc_key_fob-brd4207a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Portable Controller binary for US_LR Region. The Key Fob application capable of including/excluding and controlling the included end devices through the BASIC Command Class When ever a functionality is done the Key Fob will go into EM4 power mode and can only wakeup from EM4 either through a reset or a button press on either BTN1 or BTN2</model:description>
  </demo>
  <demo name="brd4210a.demo.zwave_soc_key_fob.us_lr" label="Z-Wave - SoC Key Fob Application (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Key Fob Application (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4210a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_key_fob/zwave_soc_key_fob-brd4210a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Portable Controller binary for US_LR Region. The Key Fob application capable of including/excluding and controlling the included end devices through the BASIC Command Class When ever a functionality is done the Key Fob will go into EM4 power mode and can only wakeup from EM4 either through a reset or a button press on either BTN1 or BTN2</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_led_bulb.eu" label="Z-Wave - SoC LED Bulb (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC LED Bulb (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4202a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC LED Bulb binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified LED Bulb application shows an implementation of a remotely controlled color switch. An example is a LED bulb or any other color capable device.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_led_bulb.eu" label="Z-Wave - SoC LED Bulb (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC LED Bulb (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4205a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC LED Bulb binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified LED Bulb application shows an implementation of a remotely controlled color switch. An example is a LED bulb or any other color capable device.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_led_bulb.eu" label="Z-Wave - SoC LED Bulb (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC LED Bulb (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4205b-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC LED Bulb binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified LED Bulb application shows an implementation of a remotely controlled color switch. An example is a LED bulb or any other color capable device.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_led_bulb.eu" label="Z-Wave - SoC LED Bulb (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC LED Bulb (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4207a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC LED Bulb binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified LED Bulb application shows an implementation of a remotely controlled color switch. An example is a LED bulb or any other color capable device.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_led_bulb.us" label="Z-Wave - SoC LED Bulb (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC LED Bulb (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4202a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC LED Bulb binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified LED Bulb application shows an implementation of a remotely controlled color switch. An example is a LED bulb or any other color capable device.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_led_bulb.us" label="Z-Wave - SoC LED Bulb (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC LED Bulb (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4205a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC LED Bulb binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified LED Bulb application shows an implementation of a remotely controlled color switch. An example is a LED bulb or any other color capable device.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_led_bulb.us" label="Z-Wave - SoC LED Bulb (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC LED Bulb (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4205b-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC LED Bulb binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified LED Bulb application shows an implementation of a remotely controlled color switch. An example is a LED bulb or any other color capable device.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_led_bulb.us" label="Z-Wave - SoC LED Bulb (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC LED Bulb (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4207a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC LED Bulb binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified LED Bulb application shows an implementation of a remotely controlled color switch. An example is a LED bulb or any other color capable device.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_led_bulb.us_lr" label="Z-Wave - SoC LED Bulb (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC LED Bulb (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4202a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC LED Bulb binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified LED Bulb application shows an implementation of a remotely controlled color switch. An example is a LED bulb or any other color capable device.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_led_bulb.us_lr" label="Z-Wave - SoC LED Bulb (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC LED Bulb (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4205a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC LED Bulb binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified LED Bulb application shows an implementation of a remotely controlled color switch. An example is a LED bulb or any other color capable device.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_led_bulb.us_lr" label="Z-Wave - SoC LED Bulb (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC LED Bulb (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4205b-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC LED Bulb binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified LED Bulb application shows an implementation of a remotely controlled color switch. An example is a LED bulb or any other color capable device.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_led_bulb.us_lr" label="Z-Wave - SoC LED Bulb (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC LED Bulb (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4207a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC LED Bulb binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified LED Bulb application shows an implementation of a remotely controlled color switch. An example is a LED bulb or any other color capable device.</model:description>
  </demo>
  <demo name="brd4209a.demo.zwave_soc_led_bulb.us_lr" label="Z-Wave - SoC LED Bulb (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC LED Bulb (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg13p531f512gm48.*"/>
    <model:property key="core.boardCompatibility" value="brd4209a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4209a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC LED Bulb binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified LED Bulb application shows an implementation of a remotely controlled color switch. An example is a LED bulb or any other color capable device.</model:description>
  </demo>
  <demo name="brd2603a.demo.zwave_soc_multilevel_sensor.eu" label="Z-Wave - SoC Multilevel Sensor (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd2603a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd2603a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_multilevel_sensor.eu" label="Z-Wave - SoC Multilevel Sensor (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4202a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_multilevel_sensor.eu" label="Z-Wave - SoC Multilevel Sensor (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204c"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4204c-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_multilevel_sensor.eu" label="Z-Wave - SoC Multilevel Sensor (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204d"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4204d-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_multilevel_sensor.eu" label="Z-Wave - SoC Multilevel Sensor (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4205a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_multilevel_sensor.eu" label="Z-Wave - SoC Multilevel Sensor (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4205b-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_multilevel_sensor.eu" label="Z-Wave - SoC Multilevel Sensor (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4207a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd2603a.demo.zwave_soc_multilevel_sensor.us" label="Z-Wave - SoC Multilevel Sensor (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd2603a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd2603a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_multilevel_sensor.us" label="Z-Wave - SoC Multilevel Sensor (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4202a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_multilevel_sensor.us" label="Z-Wave - SoC Multilevel Sensor (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (US Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204c"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4204c-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_multilevel_sensor.us" label="Z-Wave - SoC Multilevel Sensor (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (US Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204d"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4204d-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_multilevel_sensor.us" label="Z-Wave - SoC Multilevel Sensor (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4205a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_multilevel_sensor.us" label="Z-Wave - SoC Multilevel Sensor (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4205b-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_multilevel_sensor.us" label="Z-Wave - SoC Multilevel Sensor (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4207a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd2603a.demo.zwave_soc_multilevel_sensor.us_lr" label="Z-Wave - SoC Multilevel Sensor (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd2603a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd2603a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_multilevel_sensor.us_lr" label="Z-Wave - SoC Multilevel Sensor (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4202a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_multilevel_sensor.us_lr" label="Z-Wave - SoC Multilevel Sensor (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204c"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4204c-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_multilevel_sensor.us_lr" label="Z-Wave - SoC Multilevel Sensor (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204d"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4204d-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_multilevel_sensor.us_lr" label="Z-Wave - SoC Multilevel Sensor (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4205a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_multilevel_sensor.us_lr" label="Z-Wave - SoC Multilevel Sensor (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4205b-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_multilevel_sensor.us_lr" label="Z-Wave - SoC Multilevel Sensor (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4207a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd4209a.demo.zwave_soc_multilevel_sensor.us_lr" label="Z-Wave - SoC Multilevel Sensor (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg13p531f512gm48.*"/>
    <model:property key="core.boardCompatibility" value="brd4209a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4209a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd4210a.demo.zwave_soc_multilevel_sensor.us_lr" label="Z-Wave - SoC Multilevel Sensor (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4210a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4210a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Multilevel Sensor binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave Switch Multilevel Sensor application shows the ability to advertise numerical sensor readings, such as temperature, and humidity. Multiple parameters can be set for the minimum and maximum values, and a notification will be send if the measured temperature value is out of the range.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_power_strip.eu" label="Z-Wave - SoC Power Strip (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Power Strip (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4202a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Power Strip binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_power_strip.eu" label="Z-Wave - SoC Power Strip (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Power Strip (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4205a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Power Strip binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_power_strip.eu" label="Z-Wave - SoC Power Strip (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Power Strip (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4205b-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Power Strip binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_power_strip.eu" label="Z-Wave - SoC Power Strip (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Power Strip (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4207a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Power Strip binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_power_strip.us" label="Z-Wave - SoC Power Strip (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Power Strip (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4202a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Power Strip binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_power_strip.us" label="Z-Wave - SoC Power Strip (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Power Strip (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4205a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Power Strip binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_power_strip.us" label="Z-Wave - SoC Power Strip (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Power Strip (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4205b-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Power Strip binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_power_strip.us" label="Z-Wave - SoC Power Strip (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Power Strip (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4207a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Power Strip binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_power_strip.us_lr" label="Z-Wave - SoC Power Strip (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Power Strip (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4202a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Power Strip binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_power_strip.us_lr" label="Z-Wave - SoC Power Strip (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Power Strip (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4205a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Power Strip binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_power_strip.us_lr" label="Z-Wave - SoC Power Strip (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Power Strip (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4205b-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Power Strip binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_power_strip.us_lr" label="Z-Wave - SoC Power Strip (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Power Strip (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4207a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Power Strip binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4209a.demo.zwave_soc_power_strip.us_lr" label="Z-Wave - SoC Power Strip (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Power Strip (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg13p531f512gm48.*"/>
    <model:property key="core.boardCompatibility" value="brd4209a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4209a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Power Strip binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_sensor_pir.eu" label="Z-Wave - SoC Sensor PIR (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4202a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Sensor PIR binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Sensor PIR application shows a presence/movement detector implementation for controlling other devices and for sending notifications.</model:description>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_sensor_pir.eu" label="Z-Wave - SoC Sensor PIR (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204c"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4204c-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Sensor PIR binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Sensor PIR application shows a presence/movement detector implementation for controlling other devices and for sending notifications.</model:description>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_sensor_pir.eu" label="Z-Wave - SoC Sensor PIR (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204d"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4204d-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Sensor PIR binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Sensor PIR application shows a presence/movement detector implementation for controlling other devices and for sending notifications.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_sensor_pir.eu" label="Z-Wave - SoC Sensor PIR (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4205a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Sensor PIR binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Sensor PIR application shows a presence/movement detector implementation for controlling other devices and for sending notifications.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_sensor_pir.eu" label="Z-Wave - SoC Sensor PIR (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4205b-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Sensor PIR binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Sensor PIR application shows a presence/movement detector implementation for controlling other devices and for sending notifications.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_sensor_pir.eu" label="Z-Wave - SoC Sensor PIR (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4207a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Sensor PIR binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Sensor PIR application shows a presence/movement detector implementation for controlling other devices and for sending notifications.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_sensor_pir.us" label="Z-Wave - SoC Sensor PIR (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4202a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Sensor PIR binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Sensor PIR application shows a presence/movement detector implementation for controlling other devices and for sending notifications.</model:description>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_sensor_pir.us" label="Z-Wave - SoC Sensor PIR (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (US Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204c"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4204c-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Sensor PIR binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Sensor PIR application shows a presence/movement detector implementation for controlling other devices and for sending notifications.</model:description>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_sensor_pir.us" label="Z-Wave - SoC Sensor PIR (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (US Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204d"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4204d-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Sensor PIR binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Sensor PIR application shows a presence/movement detector implementation for controlling other devices and for sending notifications.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_sensor_pir.us" label="Z-Wave - SoC Sensor PIR (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4205a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Sensor PIR binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Sensor PIR application shows a presence/movement detector implementation for controlling other devices and for sending notifications.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_sensor_pir.us" label="Z-Wave - SoC Sensor PIR (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4205b-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Sensor PIR binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Sensor PIR application shows a presence/movement detector implementation for controlling other devices and for sending notifications.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_sensor_pir.us" label="Z-Wave - SoC Sensor PIR (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4207a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Sensor PIR binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Sensor PIR application shows a presence/movement detector implementation for controlling other devices and for sending notifications.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_sensor_pir.us_lr" label="Z-Wave - SoC Sensor PIR (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4202a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Sensor PIR binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Sensor PIR application shows a presence/movement detector implementation for controlling other devices and for sending notifications.</model:description>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_sensor_pir.us_lr" label="Z-Wave - SoC Sensor PIR (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204c"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4204c-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Sensor PIR binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Sensor PIR application shows a presence/movement detector implementation for controlling other devices and for sending notifications.</model:description>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_sensor_pir.us_lr" label="Z-Wave - SoC Sensor PIR (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204d"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4204d-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Sensor PIR binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Sensor PIR application shows a presence/movement detector implementation for controlling other devices and for sending notifications.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_sensor_pir.us_lr" label="Z-Wave - SoC Sensor PIR (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4205a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Sensor PIR binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Sensor PIR application shows a presence/movement detector implementation for controlling other devices and for sending notifications.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_sensor_pir.us_lr" label="Z-Wave - SoC Sensor PIR (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4205b-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Sensor PIR binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Sensor PIR application shows a presence/movement detector implementation for controlling other devices and for sending notifications.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_sensor_pir.us_lr" label="Z-Wave - SoC Sensor PIR (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4207a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Sensor PIR binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Sensor PIR application shows a presence/movement detector implementation for controlling other devices and for sending notifications.</model:description>
  </demo>
  <demo name="brd4209a.demo.zwave_soc_sensor_pir.us_lr" label="Z-Wave - SoC Sensor PIR (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg13p531f512gm48.*"/>
    <model:property key="core.boardCompatibility" value="brd4209a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4209a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Sensor PIR binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Sensor PIR application shows a presence/movement detector implementation for controlling other devices and for sending notifications.</model:description>
  </demo>
  <demo name="brd4210a.demo.zwave_soc_sensor_pir.us_lr" label="Z-Wave - SoC Sensor PIR (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4210a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4210a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Sensor PIR binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Sensor PIR application shows a presence/movement detector implementation for controlling other devices and for sending notifications.</model:description>
  </demo>
  <demo name="brd2603a.demo.zwave_soc_switch_on_off.eu" label="Z-Wave - SoC Switch On/Off (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd2603a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd2603a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_switch_on_off.eu" label="Z-Wave - SoC Switch On/Off (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4202a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_switch_on_off.eu" label="Z-Wave - SoC Switch On/Off (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204c"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4204c-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_switch_on_off.eu" label="Z-Wave - SoC Switch On/Off (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204d"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4204d-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_switch_on_off.eu" label="Z-Wave - SoC Switch On/Off (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4205a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_switch_on_off.eu" label="Z-Wave - SoC Switch On/Off (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4205b-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_switch_on_off.eu" label="Z-Wave - SoC Switch On/Off (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4207a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd2603a.demo.zwave_soc_switch_on_off.us" label="Z-Wave - SoC Switch On/Off (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd2603a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd2603a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_switch_on_off.us" label="Z-Wave - SoC Switch On/Off (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4202a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_switch_on_off.us" label="Z-Wave - SoC Switch On/Off (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (US Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204c"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4204c-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_switch_on_off.us" label="Z-Wave - SoC Switch On/Off (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (US Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204d"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4204d-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_switch_on_off.us" label="Z-Wave - SoC Switch On/Off (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4205a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_switch_on_off.us" label="Z-Wave - SoC Switch On/Off (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4205b-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_switch_on_off.us" label="Z-Wave - SoC Switch On/Off (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4207a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd2603a.demo.zwave_soc_switch_on_off.us_lr" label="Z-Wave - SoC Switch On/Off (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd2603a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd2603a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_switch_on_off.us_lr" label="Z-Wave - SoC Switch On/Off (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4202a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_switch_on_off.us_lr" label="Z-Wave - SoC Switch On/Off (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204c"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4204c-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_switch_on_off.us_lr" label="Z-Wave - SoC Switch On/Off (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204d"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4204d-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_switch_on_off.us_lr" label="Z-Wave - SoC Switch On/Off (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4205a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_switch_on_off.us_lr" label="Z-Wave - SoC Switch On/Off (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4205b-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_switch_on_off.us_lr" label="Z-Wave - SoC Switch On/Off (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4207a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4209a.demo.zwave_soc_switch_on_off.us_lr" label="Z-Wave - SoC Switch On/Off (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg13p531f512gm48.*"/>
    <model:property key="core.boardCompatibility" value="brd4209a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4209a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4210a.demo.zwave_soc_switch_on_off.us_lr" label="Z-Wave - SoC Switch On/Off (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4210a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4210a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Switch On/Off binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, etc.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_wall_controller.eu" label="Z-Wave - SoC Wall Controller (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Wall Controller (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4202a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Wall Controller binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controller and wall-mounted AV controllers.</model:description>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_wall_controller.eu" label="Z-Wave - SoC Wall Controller (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Wall Controller (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204c"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4204c-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Wall Controller binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controller and wall-mounted AV controllers.</model:description>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_wall_controller.eu" label="Z-Wave - SoC Wall Controller (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Wall Controller (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204d"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4204d-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Wall Controller binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controller and wall-mounted AV controllers.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_wall_controller.eu" label="Z-Wave - SoC Wall Controller (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Wall Controller (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4205a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Wall Controller binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controller and wall-mounted AV controllers.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_wall_controller.eu" label="Z-Wave - SoC Wall Controller (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Wall Controller (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4205b-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Wall Controller binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controller and wall-mounted AV controllers.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_wall_controller.eu" label="Z-Wave - SoC Wall Controller (EU Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Wall Controller (EU Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4207a-eu.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Wall Controller binary for EU Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controller and wall-mounted AV controllers.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_wall_controller.us" label="Z-Wave - SoC Wall Controller (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Wall Controller (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4202a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Wall Controller binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controller and wall-mounted AV controllers.</model:description>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_wall_controller.us" label="Z-Wave - SoC Wall Controller (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Wall Controller (US Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204c"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4204c-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Wall Controller binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controller and wall-mounted AV controllers.</model:description>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_wall_controller.us" label="Z-Wave - SoC Wall Controller (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Wall Controller (US Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204d"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4204d-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Wall Controller binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controller and wall-mounted AV controllers.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_wall_controller.us" label="Z-Wave - SoC Wall Controller (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Wall Controller (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4205a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Wall Controller binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controller and wall-mounted AV controllers.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_wall_controller.us" label="Z-Wave - SoC Wall Controller (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Wall Controller (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4205b-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Wall Controller binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controller and wall-mounted AV controllers.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_wall_controller.us" label="Z-Wave - SoC Wall Controller (US Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Wall Controller (US Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4207a-us.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Wall Controller binary for US Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controller and wall-mounted AV controllers.</model:description>
  </demo>
  <demo name="brd4202a.demo.zwave_soc_wall_controller.us_lr" label="Z-Wave - SoC Wall Controller (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Wall Controller (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4202a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4202a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Wall Controller binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controller and wall-mounted AV controllers.</model:description>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_wall_controller.us_lr" label="Z-Wave - SoC Wall Controller (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Wall Controller (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204c"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4204c-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Wall Controller binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controller and wall-mounted AV controllers.</model:description>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_wall_controller.us_lr" label="Z-Wave - SoC Wall Controller (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Wall Controller (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4204d"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4204d-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Wall Controller binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controller and wall-mounted AV controllers.</model:description>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_wall_controller.us_lr" label="Z-Wave - SoC Wall Controller (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Wall Controller (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4205a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Wall Controller binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controller and wall-mounted AV controllers.</model:description>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_wall_controller.us_lr" label="Z-Wave - SoC Wall Controller (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Wall Controller (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4205b"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4205b-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Wall Controller binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controller and wall-mounted AV controllers.</model:description>
  </demo>
  <demo name="brd4207a.demo.zwave_soc_wall_controller.us_lr" label="Z-Wave - SoC Wall Controller (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Wall Controller (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*zgm130s037hgn.*"/>
    <model:property key="core.boardCompatibility" value="brd4207a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4207a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Wall Controller binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controller and wall-mounted AV controllers.</model:description>
  </demo>
  <demo name="brd4209a.demo.zwave_soc_wall_controller.us_lr" label="Z-Wave - SoC Wall Controller (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Wall Controller (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg13p531f512gm48.*"/>
    <model:property key="core.boardCompatibility" value="brd4209a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4209a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Wall Controller binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controller and wall-mounted AV controllers.</model:description>
  </demo>
  <demo name="brd4210a.demo.zwave_soc_wall_controller.us_lr" label="Z-Wave - SoC Wall Controller (US_LR Region)">
    <model:property key="demos.blurb" value="Z-Wave - SoC Wall Controller (US_LR Region)"/>
    <model:property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <model:property key="core.boardCompatibility" value="brd4210a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.1.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4210a-us_lr.hex"/>
    <model:property key="readmeFiles" value=""/>
    <model:property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Prebuilt Z-Wave - SoC Wall Controller binary for US_LR Region. NOTE that this region is only used if MFG_ZWAVE_COUNTRY_FREQ is not set. The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controller and wall-mounted AV controllers.</model:description>
  </demo>
</demos>

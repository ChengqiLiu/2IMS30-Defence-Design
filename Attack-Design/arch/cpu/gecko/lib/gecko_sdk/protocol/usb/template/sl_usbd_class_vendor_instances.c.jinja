//****************************************************************************
// Includes.

#include "sl_status.h"
#include "sl_usbd_core.h"
#include "sl_usbd_class_vendor.h"

/* template headers */
#include "sl_usbd_configuration_instances.h"
#include "sl_usbd_class_vendor_instances.h"

/* include config file for the instances */
{% for instance in usb_vendor_instances %}
#include "sl_usbd_class_{{ instance }}_config.h"
{% endfor %}

//****************************************************************************
// Function declarations.

{# Generate callback function prototypes for all instances #}
{% for instance in usb_vendor_instances %}

/* callback prototypes for {{ instance }} instance */

void sli_usbd_vendor_{{ instance }}_enable(uint8_t class_nbr);

void sli_usbd_vendor_{{ instance }}_disable(uint8_t class_nbr);

void sli_usbd_vendor_{{ instance }}_setup_req(uint8_t class_nbr,
                                              const sl_usbd_setup_req_t *p_setup_req);

{% endfor %}


//****************************************************************************
// Global variables.

{# Generate variables for all instances #}
{% for instance in usb_vendor_instances %}

/* variables for {{ instance }} instance */

uint8_t sl_usbd_vendor_{{ instance }}_number = 0;

sl_usbd_vendor_callbacks_t sli_usbd_vendor_{{ instance }}_callbacks = {
  sli_usbd_vendor_{{ instance }}_enable,
  sli_usbd_vendor_{{ instance }}_disable,
  sli_usbd_vendor_{{ instance }}_setup_req,
};

{% endfor %}

//****************************************************************************
// Callback functions.

{# Generate callback functions for all instances #}
{% for instance in usb_vendor_instances %}

void sli_usbd_vendor_{{ instance }}_enable(uint8_t class_nbr)
{
  (void)&class_nbr;

  sl_usbd_vendor_{{ instance }}_on_enable_event();

  return;
}

void sli_usbd_vendor_{{ instance }}_disable(uint8_t class_nbr)
{
  (void)&class_nbr;

  sl_usbd_vendor_{{ instance }}_on_disable_event();

  return;
}

void sli_usbd_vendor_{{ instance }}_setup_req(uint8_t class_nbr,
                                              const sl_usbd_setup_req_t *p_setup_req)
{
  (void)&class_nbr;

  sl_usbd_vendor_{{ instance }}_on_setup_request_event(p_setup_req);

  return;
}
{% endfor %}

//****************************************************************************
// Global functions.

{# Generate initialization functions for all configurations #}
{% for instance in usb_vendor_instances %}
/* initialize {{ instance }} instance */
void sli_usbd_vendor_{{ instance }}_init()
{
  bool      intr_en         = true;
  uint16_t  interval        = 0;

  uint8_t   class_number    = 0;
  uint8_t   config_number   = 0;

  char     *configs         = NULL;
  char     *token           = NULL;

  /* configs to attach the class instance to */
  configs = SL_USBD_VENDOR_{{ instance | upper }}_CONFIGURATIONS;

  /* read interrupt enable flag */
  intr_en = SL_USBD_VENDOR_{{ instance | upper }}_INTERRUPT_ENDPOINTS;

  /* read interval */
  interval  = SL_USBD_VENDOR_{{ instance | upper }}_INTERVAL;

  /* create vendor instance */
  sl_usbd_vendor_create_instance(intr_en,
                                 interval,
                                 &sli_usbd_vendor_{{ instance }}_callbacks,
                                 &class_number);

  /* store class number globally */
  sl_usbd_vendor_{{ instance }}_number = class_number;

  /* tokenize configs by "," and spaces */
  token = strtok(configs, ", ");

  /* loop over tokens */
  while (token != NULL) {
    {% for cfg in usb_configuration_instances %}
    /* add to {{ cfg }}? */
    if (!strcmp(token, "{{ cfg }}") || !strcmp(token, "all")) {
      config_number = sl_usbd_configuration_{{ cfg }}_number;
      sl_usbd_vendor_add_to_configuration(class_number, config_number);
    }
    {% endfor %}

    /* next token */
    token = strtok(NULL, ", ");
  }
}
{% endfor %}

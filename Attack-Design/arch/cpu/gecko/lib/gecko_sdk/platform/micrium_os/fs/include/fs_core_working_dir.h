/***************************************************************************//**
 * @file
 * @brief File System - Core Working Directory Operations
 *******************************************************************************
 * # License
 * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
 *******************************************************************************
 *
 * The licensor of this software is Silicon Laboratories Inc.  Your use of this
 * software is governed by the terms of Silicon Labs Master Software License
 * Agreement (MSLA) available at
 * www.silabs.com/about-us/legal/master-software-license-agreement.
 * The software is governed by the sections of the MSLA applicable to Micrium
 * Software.
 *
 ******************************************************************************/

/****************************************************************************************************//**
 * @addtogroup FS_CORE
 * @{
 *******************************************************************************************************/

/********************************************************************************************************
 ********************************************************************************************************
 *                                               MODULE
 ********************************************************************************************************
 *******************************************************************************************************/

#ifndef  FS_CORE_WORKING_DIR_H_
#define  FS_CORE_WORKING_DIR_H_

/********************************************************************************************************
 ********************************************************************************************************
 *                                               INCLUDE FILES
 ********************************************************************************************************
 *******************************************************************************************************/

//                                                                 ----------------------- EXT ------------------------
#include  <common/include/rtos_err.h>
#include  <cpu/include/cpu.h>

//                                                                 ------------------------ FS ------------------------
#include  <fs/include/fs_core_vol.h>
#include  <fs/include/fs_obj.h>

/********************************************************************************************************
 ********************************************************************************************************
 *                                               DATA TYPES
 ********************************************************************************************************
 *******************************************************************************************************/

//                                                                 Working directory handle.
typedef struct fs_wrk_dir_handle {
  struct fs_wrk_dir *WrkDirPtr;
  FS_OBJ_ID         WrkDirId;
} FS_WRK_DIR_HANDLE;

/********************************************************************************************************
 ********************************************************************************************************
 *                                           GLOBAL VARIABLES
 *
 * Note(s) : (1) The application should use the 'FS_WRK_DIR_NULL' macro instead of the 'FSWrkDir_NullHandle'
 *               global variable.
 ********************************************************************************************************
 *******************************************************************************************************/

//                                                                 Null Working directory handle (see Note #1).
extern const FS_WRK_DIR_HANDLE FSWrkDir_NullHandle;

/********************************************************************************************************
 ********************************************************************************************************
 *                                               DEFINES
 ********************************************************************************************************
 *******************************************************************************************************/

//                                                                 Null Working directory handle.
#define  FS_WRK_DIR_NULL   FSWrkDir_NullHandle

//                                                                 Current working directory.
#if (FS_CORE_CFG_TASK_WORKING_DIR_EN == DEF_ENABLED)
#define  FS_WRK_DIR_CUR    FSWrkDir_Get()
#endif

/********************************************************************************************************
 ********************************************************************************************************
 *                                               MACROS
 ********************************************************************************************************
 *******************************************************************************************************/

//                                                                 Verify whether a working directory handle is null.
#define  FS_WRK_DIR_HANDLE_IS_NULL(h)                       (((h).WrkDirPtr == DEF_NULL) && ((h).WrkDirId == 0u))

/********************************************************************************************************
 ********************************************************************************************************
 *                                           FUNCTION PROTOTYPES
 ********************************************************************************************************
 *******************************************************************************************************/

#ifdef __cplusplus
extern "C" {
#endif

FS_WRK_DIR_HANDLE FSWrkDir_Open(FS_WRK_DIR_HANDLE wrk_dir_handle,
                                const CPU_CHAR    *p_path,
                                RTOS_ERR          *p_err);

void FSWrkDir_Close(FS_WRK_DIR_HANDLE wrk_dir_handle,
                    RTOS_ERR          *p_err);

CPU_SIZE_T FSWrkDir_PathGet(FS_WRK_DIR_HANDLE wrk_dir_handle,
                            CPU_CHAR          *p_buf,
                            CPU_SIZE_T        buf_size,
                            RTOS_ERR          *p_err);

FS_VOL_HANDLE FSWrkDir_VolGet(FS_WRK_DIR_HANDLE wrk_dir_handle);

#if (FS_CORE_CFG_TASK_WORKING_DIR_EN == DEF_ENABLED)
FS_WRK_DIR_HANDLE FSWrkDir_Get(void);

void FSWrkDir_TaskBind(FS_WRK_DIR_HANDLE wrk_dir_handle,
                       const CPU_CHAR    *p_path,
                       RTOS_ERR          *p_err);

void FSWrkDir_TaskUnbind(RTOS_ERR *p_err);

#endif

#ifdef __cplusplus
}
#endif

/****************************************************************************************************//**
 ********************************************************************************************************
 * @}                                       MODULE END
 ********************************************************************************************************
 *******************************************************************************************************/

#endif

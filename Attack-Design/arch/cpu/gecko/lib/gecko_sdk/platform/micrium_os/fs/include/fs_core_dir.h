/***************************************************************************//**
 * @file
 * @brief File System - Core Directory Operations
 *******************************************************************************
 * # License
 * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
 *******************************************************************************
 *
 * The licensor of this software is Silicon Laboratories Inc.  Your use of this
 * software is governed by the terms of Silicon Labs Master Software License
 * Agreement (MSLA) available at
 * www.silabs.com/about-us/legal/master-software-license-agreement.
 * The software is governed by the sections of the MSLA applicable to Micrium
 * Software.
 *
 ******************************************************************************/

/****************************************************************************************************//**
 * @addtogroup FS_CORE
 * @{
 *******************************************************************************************************/

/********************************************************************************************************
 ********************************************************************************************************
 *                                               MODULE
 ********************************************************************************************************
 *******************************************************************************************************/

#ifndef  FS_CORE_DIR_H_
#define  FS_CORE_DIR_H_

/********************************************************************************************************
 ********************************************************************************************************
 *                                           INCLUDE FILES
 ********************************************************************************************************
 *******************************************************************************************************/

#include  <fs_core_cfg.h>
#include  <fs/include/fs_core_entry.h>
#include  <fs/include/fs_core_working_dir.h>

#if (FS_CORE_CFG_DIR_EN == DEF_ENABLED)

/********************************************************************************************************
 ********************************************************************************************************
 *                                               DEFINES
 ********************************************************************************************************
 *******************************************************************************************************/

#define  FS_DIR_NULL                     FSDir_NullHandle

//                                                                 -------------- DIRECTORY ACCESS MODE ---------------
#define  FS_DIR_ACCESS_MODE_NONE         DEF_BIT_NONE
#define  FS_DIR_ACCESS_MODE_EXCL         DEF_BIT_00
#define  FS_DIR_ACCESS_MODE_CREATE       DEF_BIT_01
#define  FS_DIR_ACCESS_MODE_ALL         (FS_DIR_ACCESS_MODE_EXCL | FS_DIR_ACCESS_MODE_CREATE)

/********************************************************************************************************
 ********************************************************************************************************
 *                                               DATA TYPES
 ********************************************************************************************************
 *******************************************************************************************************/

//                                                                 ----------------- DIRECTORY HANDLE -----------------
typedef struct fs_dir_handle {
  struct fs_dir_desc *DirDescPtr;
  FS_OBJ_ID          DirDescId;
} FS_DIR_HANDLE;

/********************************************************************************************************
 ********************************************************************************************************
 *                                           GLOBAL VARIABLES
 *
 * Note(s): (1) The application should use the 'FS_DIR_NULL' macro instead of the 'FSDir_NullHandle'
 *               global variable.
 ********************************************************************************************************
 *******************************************************************************************************/

//                                                                 Null directory handle (see Note #1).
extern const FS_DIR_HANDLE FSDir_NullHandle;

/********************************************************************************************************
 ********************************************************************************************************
 *                                               MACROS
 ********************************************************************************************************
 *******************************************************************************************************/

//                                                                 Verify whether a directory handle is null.
#define  FS_DIR_HANDLE_IS_NULL(h)                 (((h).DirDescPtr == DEF_NULL) && ((h).DirDescId == 0u))

/********************************************************************************************************
 ********************************************************************************************************
 *                                           FUNCTION PROTOTYPES
 ********************************************************************************************************
 *******************************************************************************************************/

#ifdef __cplusplus
extern "C" {
#endif

FS_DIR_HANDLE FSDir_Open(FS_WRK_DIR_HANDLE wrk_dir_handle,
                         const CPU_CHAR    *path,
                         FS_FLAGS          mode,
                         RTOS_ERR          *p_err);

void FSDir_Close(FS_DIR_HANDLE dir_handle,
                 RTOS_ERR      *p_err);

CPU_BOOLEAN FSDir_Rd(FS_DIR_HANDLE dir_handle,
                     FS_ENTRY_INFO *p_entry_info,
                     CPU_CHAR      *p_buf,
                     CPU_SIZE_T    buf_size,
                     RTOS_ERR      *p_err);

void FSDir_Query(FS_DIR_HANDLE dir_handle,
                 FS_ENTRY_INFO *p_entry_info,
                 RTOS_ERR      *p_err);

void FSDir_PathGet(FS_DIR_HANDLE dir_handle,
                   CPU_CHAR      *p_buf,
                   CPU_SIZE_T    buf_size,
                   RTOS_ERR      *p_err);

FS_VOL_HANDLE FSDir_VolGet(FS_DIR_HANDLE dir_handle);
#endif

#ifdef __cplusplus
}
#endif

/****************************************************************************************************//**
 ********************************************************************************************************
 * @}                                      MODULE END
 ********************************************************************************************************
 *******************************************************************************************************/

#endif

/***************************************************************************//**
 * @file
 * @brief Entropy Module Header File
 *******************************************************************************
 * # License
 * <b>Copyright 2020 Silicon Laboratories Inc. www.silabs.com</b>
 *******************************************************************************
 *
 * The licensor of this software is Silicon Laboratories Inc.  Your use of this
 * software is governed by the terms of Silicon Labs Master Software License
 * Agreement (MSLA) available at
 * www.silabs.com/about-us/legal/master-software-license-agreement.
 * The software is governed by the sections of the MSLA applicable to Micrium
 * Software.
 *
 ******************************************************************************/

/********************************************************************************************************
 ********************************************************************************************************
 *                                               MODULE
 ********************************************************************************************************
 *******************************************************************************************************/

#ifndef  _ENTROPY_H_
#define  _ENTROPY_H_

/********************************************************************************************************
 ********************************************************************************************************
 *                                       DEPENDENCIES & AVAIL CHECK(S)
 ********************************************************************************************************
 *******************************************************************************************************/

#include  <rtos_description.h>

#if defined(RTOS_MODULE_ENTROPY_AVAIL)

/********************************************************************************************************
 ********************************************************************************************************
 *                                            INCLUDE FILES
 ********************************************************************************************************
 *******************************************************************************************************/

#include  <cpu/include/cpu.h>

#include  <common/include/rtos_err.h>
#include  <common/include/platform_mgr.h>

/********************************************************************************************************
 ********************************************************************************************************
 *                                               DEFINES
 ********************************************************************************************************
 *******************************************************************************************************/

#define ENTROPY_RNG_REG(name, p_drv_info)                      \
  do {                                                         \
    static const struct entropy_rng_pm_item _item = {          \
      .Item.Type = PLATFORM_MGR_ITEM_TYPE_HW_INFO_ENTROPY,     \
      .Item.StrID = (name),                                    \
      .BusDrvInfoPtr = (void *)(p_drv_info)                    \
    };                                                         \
    PlatformMgrItemInitAdd((PLATFORM_MGR_ITEM *)&_item.Item);  \
  } while (0)

/********************************************************************************************************
 ********************************************************************************************************
 *                                             DATA TYPES
 ********************************************************************************************************
 *******************************************************************************************************/

typedef struct entropy_rng_bsp_api {
  void       (*Open)     ( void );
  void       (*Close)    ( void );
  CPU_INT32U (*Generate) ( CPU_INT08U *buf, CPU_INT32U len );
} ENTROPY_RNG_BSP_API;

typedef struct entropy_rng_drv_info {
  const ENTROPY_RNG_BSP_API *BSP_API_Ptr;
} ENTROPY_RNG_DRV_INFO;

typedef struct entropy_rng_pm_item {
  PLATFORM_MGR_ITEM      Item;
  ENTROPY_RNG_DRV_INFO  *BusDrvInfoPtr;
} ENTROPY_RNG_PM_ITEM;

/********************************************************************************************************
 ********************************************************************************************************
 *                                         FUNCTION PROTOTYPES
 ********************************************************************************************************
 *******************************************************************************************************/

#ifdef __cplusplus
extern "C" {
#endif

void Entropy_Init(RTOS_ERR *p_err);

void Entropy_AddSource(CPU_CHAR *itemName, RTOS_ERR *p_err);

void Entropy_Generate(CPU_INT08U *buf, CPU_INT32U len, RTOS_ERR *p_err);

#ifdef __cplusplus
}
#endif

/********************************************************************************************************
 ********************************************************************************************************
 *                                       DEPENDENCIES & AVAIL CHECK(S)
 ********************************************************************************************************
 *******************************************************************************************************/

#endif // RTOS_MODULE_ENTROPY_AVAIL

/****************************************************************************************************//**
 ********************************************************************************************************
 * @}                                          MODULE END
 ********************************************************************************************************
 *******************************************************************************************************/

#endif // _ENTROPY_H_

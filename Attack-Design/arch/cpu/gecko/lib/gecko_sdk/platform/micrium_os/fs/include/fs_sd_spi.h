/***************************************************************************//**
 * @file
 * @brief File System - SD SPI Media Driver
 *******************************************************************************
 * # License
 * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
 *******************************************************************************
 *
 * The licensor of this software is Silicon Laboratories Inc.  Your use of this
 * software is governed by the terms of Silicon Labs Master Software License
 * Agreement (MSLA) available at
 * www.silabs.com/about-us/legal/master-software-license-agreement.
 * The software is governed by the sections of the MSLA applicable to Micrium
 * Software.
 *
 ******************************************************************************/

/****************************************************************************************************//**
 * @addtogroup FS_STORAGE
 * @{
 ********************************************************************************************************
 * @note     (1) This driver complies with the following specifications:
 *             - (a) SD Card Association.  "Physical Layer Simplified Specification Version 2.00".
 *                   July 26, 2006.
 *             - (b) JEDEC Solid State Technology Association.  "MultiMediaCard (MMC) Electrical
 *                   Standard, High Capacity".  JESD84-B42.  July 2007.
 *
 * @note     (2) This driver has been tested with MOST SD/MMC media types, including :
 *             - (a) Standard capacity SD cards, v1.x & v2.0.
 *             - (b) SDmicro cards.
 *             - (c) High capacity SD cards (SDHC)
 *             - (d) MMC
 *             - (e) MMCplus
 *               It should also work with devices compliant with the relevant SD or MMC specifications.
 *******************************************************************************************************/

/********************************************************************************************************
 ********************************************************************************************************
 *                                               MODULE
 ********************************************************************************************************
 *******************************************************************************************************/

#ifndef  FS_SD_SPI_H_
#define  FS_SD_SPI_H_

/********************************************************************************************************
 ********************************************************************************************************
 *                                               INCLUDE FILES
 ********************************************************************************************************
 *******************************************************************************************************/

#include  <fs_storage_cfg.h>
#include  <fs/include/fs_media.h>
#include  <fs/include/fs_sd.h>
#include  <fs/include/fs_blk_dev.h>
#include  <io/include/spi.h>

/********************************************************************************************************
 ********************************************************************************************************
 *                                               DATA TYPES
 ********************************************************************************************************
 *******************************************************************************************************/

/*
 ********************************************************************************************************
 *                                       SD SPI PLATFORM MANAGER ITEM
 *******************************************************************************************************/

typedef struct fs_sd_spi_pm_item {
  struct fs_media_pm_item MediaPmItem;
  CPU_CHAR                *SpiCtrlrNamePtr;
  CPU_INT16U              SlaveID;
} FS_SD_SPI_PM_ITEM;

/********************************************************************************************************
 ********************************************************************************************************
 *                                           GLOBAL VARIABLES
 ********************************************************************************************************
 *******************************************************************************************************/

extern const struct fs_media_api FS_SD_SPI_MediaApi;

/********************************************************************************************************
 ********************************************************************************************************
 *                                               MACRO'S
 ********************************************************************************************************
 *******************************************************************************************************/

#define  FS_SD_SPI_HW_INFO_REG(p_name, p_ctrlr_name, slave_id)                 \
  do {                                                                         \
    static const FS_SD_SPI_PM_ITEM _pm_item = {                                \
      .MediaPmItem.PmItem.StrID = p_name,                                      \
      .MediaPmItem.PmItem.Type = PLATFORM_MGR_ITEM_TYPE_HW_INFO_FS_SD_SPI,     \
      .MediaPmItem.MediaApiPtr = &FS_SD_SPI_MediaApi,                          \
      .SpiCtrlrNamePtr = p_ctrlr_name,                                         \
      .SlaveID = slave_id                                                      \
    };                                                                         \
    PlatformMgrItemInitAdd((PLATFORM_MGR_ITEM *)&_pm_item.MediaPmItem.PmItem); \
  } while (0);

/********************************************************************************************************
 ********************************************************************************************************
 *                                           CONFIGURATION ERRORS
 ********************************************************************************************************
 *******************************************************************************************************/

#ifndef  FS_SD_SPI_CFG_CRC_EN
#error  "FS_SD_SPI_CFG_CRC_EN not #define'd in 'fs_storage_cfg.h'. MUST be DEF_ENABLED or DEF_DISABLED."
#elif  ((FS_SD_SPI_CFG_CRC_EN != DEF_DISABLED) \
  && (FS_SD_SPI_CFG_CRC_EN != DEF_ENABLED))
#error  "FS_SD_SPI_CFG_CRC_EN illegally #define'd in 'fs_storage_cfg.h'. MUST be DEF_ENABLED or DEF_DISABLED."
#endif

/****************************************************************************************************//**
 ********************************************************************************************************
 * @}                                          MODULE END
 ********************************************************************************************************
 *******************************************************************************************************/

#endif
